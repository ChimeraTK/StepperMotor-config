##mako
# Register all support components
dbLoadDatabase("dbd/ChimeraTK.dbd",0,0)
ChimeraTK_registerRecordDeviceDriver(pdbbase)

# Set up ChimeraTKApp application and set polling intervall to 100us
chimeraTKConfigureApplication("ChimeraTKApp", 100)

# Set up search path for autosave request files
set_requestfile_path("req/")

# Set up search path for autosave save files
set_savefile_path("saves/")

# Load record instances
dbLoadRecords("db/steppermotorserver.db","Server=${STATION},APP=ChimeraTKApp")
% for i, motor in motor_cfg.motors.items():
dbLoadRecords("db/steppermotorserver-motor.db","Server=${STATION},APP=ChimeraTKApp,Motor=${motor.name},MotorNr=${int(i + 1)},PosUnit=${motor.unit}")
% endfor

# Set up PV-Restore at boot up. pass0 and pass1 refer to different stages during boot.
# For more information refer to: https://htmlpreview.github.io/?https://github.com/epics-modules/autosave/blob/master/documentation/autoSaveRestore.html#How%20to%20use%20autosave
% for i, motor in motor_cfg.motors.items():
set_pass0_restoreFile("steppermotorserver-motor${int(i+1)}.sav")
set_pass1_restoreFile("steppermotorserver-motor${int(i+1)}.sav")
% endfor
# Set up AutoSave Restore
save_restoreSet_DatedBackupFiles(0)
save_restoreSet_NumSeqFiles(2)
save_restoreSet_SeqPeriodInSeconds(1800)

# Initialise the IOC
iocInit()

# Set up autosave to monitor a set of PV, defined in the request file and every x seconds, if one of the PVs has been posted, makes a save.
% for i, motor in motor_cfg.motors.items():
create_monitor_set("steppermotorserver-motor${int(i+1)}.req",1,"Server=${STATION},Motor=${motor.name}")
% endfor

# Set up autosave to periodically save a set of PVs, defined in the request file, and every x seconds.
#create_periodic_set("<FilenameOrPath>.req", <x>)

# Set up autosave to save a set of PVs, defined in the request file, whenever PV is posted (e.g. changes).
#create_triggered_set("<FilenameOrPath>.req", <PV>)

# Set up autosave to save a set of PVs, defined in the request file, everytime manual_save(\"<FilenameOrPath>.req\") is executed.
#create_manual_set("<FilenameOrPath>.req", <x>)

# Start any sequence programs
#seq sncllrfctrl,"user=<user>"
