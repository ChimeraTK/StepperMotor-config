<?xml version="1.0" encoding="UTF-8"?>
<EPICSdb xmlns="https://github.com/ChimeraTK/ControlSystemAdapter-EPICS-IOC-Adapter" application="steppermotorserver">
    <sourcefile type="xml-variables" path="steppermotorserver_1_0_4.xml" label="steppermotorserver" />
    <!-- Cheat Sheet: recordgroup types
    input records: ending with in/i, for data from device (ChimeraTK application) to control system (EPICS client)
    output records: ending with out/o, for data from control system (EPICS client) to device (ChimeraTK application)
    aai/aao - Analog Array Input/Output, most basic record group, allows definition of value type, array can have only one element
    ai/ao - Analog Input/Output, interpretes data as if value type is double
    bi/bo - Binary Input/Output, interpretes data as if value type is boolean
    longin/longout - interpretes data as if value type is int32
    int64in/int64out - interpretes data as if value type is int64
    lsi/lso - Long String Input/Output, able to handle strings, larger than 40 characters
    -->
    <outputfile path="../templates/db/steppermotorserver-motor.db" autosavePath="../templates/req/steppermotorserver-motor.req" macroReserve="10">
        <field type="DTYP" value="ChimeraTK" />
        <recordgroup type="bi" autosave="false">
            <field type="SCAN" value="1 second" />
            <field type="ZNAM" value="False" />
            <field type="ONAM" value="True" />
            <record pvName="$(Server)/$(Motor)/InNotification/hasMessage" source="steppermotorserver.Motor1/controlInput/notification/hasMessage">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/controlInput/notification/hasMessage" />
            </record>
            <record pvName="$(Server)/$(Motor)/EndswitchPositive/isAvailable" source="steppermotorserver.Motor1/readback/positiveEndSwitch/isAvailable">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/positiveEndSwitch/isAvailable" />
            </record>
            <record pvName="$(Server)/$(Motor)/EndswitchNegative/isAvailable" source="steppermotorserver.Motor1/readback/negativeEndSwitch/isAvailable">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/negativeEndSwitch/isAvailable" />
            </record>
        </recordgroup>
        <recordgroup type="aai" autosave="false">
            <field type="SCAN" value="1 second" />
            <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/+{:variableName}" />
            <field type="FTVL" value="+{:value_type}" />
            <field type="NELM" value="1" />
            <field type="EGU" value="+{:unit}" />
            <record pvName="$(Server)/$(Motor)/receiveTimeActual" source="steppermotorserver.Motor1/readback/actualReceiveTime" />
            <record pvName="$(Server)/$(Motor)/cycleTimeActual" source="steppermotorserver.Motor1/readback/actualCycleTime" />
        </recordgroup>
        <recordgroup type="aai" autosave="false">
            <field type="SCAN" value="1 second" />
            <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/position/+{:variableName}" />
            <field type="FTVL" value="+{:value_type}" />
            <field type="NELM" value="1" />
            <field type="EGU" value="" />
            <record pvName="$(Server)/$(Motor)/Position/actualValue" source="steppermotorserver.Motor1/readback/position/actualValue" />
            <record pvName="$(Server)/$(Motor)/Position/encoder" source="steppermotorserver.Motor1/readback/position/encoder" />
            <record pvName="$(Server)/$(Motor)/Position/targetValue" source="steppermotorserver.Motor1/readback/position/targetValue" />
        </recordgroup>
        <recordgroup type="aai" autosave="false">
            <field type="SCAN" value="1 second" />
            <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/speedLimit/+{:variableName}" />
            <field type="FTVL" value="+{:value_type}" />
            <field type="NELM" value="1" />
            <field type="EGU" value="Hz" />
            <record pvName="$(Server)/$(Motor)/SpeedLimit/userValue" source="steppermotorserver.Motor1/readback/speedLimit/userValue" />
            <record pvName="$(Server)/$(Motor)/SpeedLimit/maxValue" source="steppermotorserver.Motor1/readback/speedLimit/maxValue" />
        </recordgroup>
        <recordgroup type="aai" autosave="false">
            <field type="SCAN" value="1 second" />
            <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/currentLimit/+{:variableName}" />
            <field type="FTVL" value="+{:value_type}" />
            <field type="NELM" value="1" />
            <field type="EGU" value="A" />
            <record pvName="$(Server)/$(Motor)/CurrentLimit/maxValue" source="steppermotorserver.Motor1/readback/currentLimit/maxValue" />
            <record pvName="$(Server)/$(Motor)/CurrentLimit/userValue" source="steppermotorserver.Motor1/readback/currentLimit/userValue" />
        </recordgroup>
        <recordgroup type="aai" autosave="false">
            <field type="SCAN" value="1 second" />
            <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/swLimits/+{:variableName}" />
            <field type="FTVL" value="+{:value_type}" />
            <field type="NELM" value="1" />
            <field type="EGU" value="" />
            <record pvName="$(Server)/$(Motor)/SwLimit/positionMax" source="steppermotorserver.Motor1/readback/swLimits/maxPosition" />
            <record pvName="$(Server)/$(Motor)/SwLimit/positionMin" source="steppermotorserver.Motor1/readback/swLimits/minPosition" />
        </recordgroup>
        <recordgroup type="aai" autosave="false">
            <field type="SCAN" value="1 second" />
            <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/positiveEndSwitch/+{:variableName}" />
            <field type="FTVL" value="+{:value_type}" />
            <field type="NELM" value="1" />
            <field type="EGU" value="" />
            <record pvName="$(Server)/$(Motor)/EndswitchPositive/position" source="steppermotorserver.Motor1/readback/positiveEndSwitch/position" />
            <record pvName="$(Server)/$(Motor)/EndswitchPositive/tolerance" source="steppermotorserver.Motor1/readback/positiveEndSwitch/tolerance" />
        </recordgroup>
        <recordgroup type="aai" autosave="false">
            <field type="SCAN" value="1 second" />
            <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/negativeEndSwitch/+{:variableName}" />
            <field type="FTVL" value="+{:value_type}" />
            <field type="NELM" value="1" />
            <field type="EGU" value="" />
            <record pvName="$(Server)/$(Motor)/EndswitchNegative/position" source="steppermotorserver.Motor1/readback/negativeEndSwitch/position" />
            <record pvName="$(Server)/$(Motor)/EndswitchNegative/tolerance" source="steppermotorserver.Motor1/readback/negativeEndSwitch/tolerance" />
        </recordgroup>
        <recordgroup type="lsi" autosave="false">
            <field type="SCAN" value="1 second" />
            <field type="SIZV" value="255" />
            <record pvName="$(Server)/$(Motor)/InNotification/message" source="steppermotorserver.Motor1/controlInput/notification/message">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/controlInput/notification/message" />
            </record>
            <record pvName="$(Server)/$(Motor)/Status/message" source="steppermotorserver.Motor1/StatusPropagator/message">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/StatusPropagator/message" />
            </record>
            <record pvName="$(Server)/$(Motor)/Status/motorState" source="steppermotorserver.Motor1/StatusPropagator/motorState">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/StatusPropagator/motorState" />
            </record>
            <record pvName="$(Server)/$(Motor)/ModuleStatus/message" source="steppermotorserver.Motor1/readback/ModuleStatus/message">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/ModuleStatus/message" />
            </record>
            <record pvName="$(Server)/$(Motor)/StatusRB/state" source="steppermotorserver.Motor1/readback/status/state">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/status/state" />
            </record>
        </recordgroup>
        <recordgroup type="ao" autosave="true">
            <field type="SCAN" value="Passive" />
            <field type="OUT" value="@$(APP) Motor$(MotorNr)/controlInput/userLimits/+{:variableName}" />
            <field type="EGU" value="+{:unit}" />
            <field type="PINI" value="1" />
            <record pvName="$(Server)/$(Motor)/InUserlimits/current" source="steppermotorserver.Motor1/controlInput/userLimits/current" />
            <record pvName="$(Server)/$(Motor)/InUserlimits/speed" source="steppermotorserver.Motor1/controlInput/userLimits/speed"><field type="EGU" value="Hz" /></record>
        </recordgroup>
        <recordgroup type="ao" autosave="true">
            <field type="SCAN" value="Passive" />
            <field type="OUT" value="@$(APP) Motor$(MotorNr)/controlInput/positionSetpoint/+{:variableName}" />
            <field type="EGU" value="$(PosUnit)" />
            <field type="PINI" value="1" />
            <record pvName="$(Server)/$(Motor)/InPositionSP/positionRelative" source="steppermotorserver.Motor1/controlInput/positionSetpoint/relativePosition" />
            <record pvName="$(Server)/$(Motor)/InPositionSP/position" source="steppermotorserver.Motor1/controlInput/positionSetpoint/position" />
        </recordgroup>
        <recordgroup type="ao" autosave="true">
            <field type="SCAN" value="Passive" />
            <field type="OUT" value="@$(APP) Motor$(MotorNr)/controlInput/swLimits/+{:variableName}" />
            <field type="EGU" value="$(PosUnit)" />
            <field type="PINI" value="1" />
            <record pvName="$(Server)/$(Motor)/InSwlimits/positionMax" source="steppermotorserver.Motor1/controlInput/swLimits/maxPosition" />
            <record pvName="$(Server)/$(Motor)/InSwlimits/positionMin" source="steppermotorserver.Motor1/controlInput/swLimits/minPosition" />
        </recordgroup>
        <recordgroup type="ao" autosave="true">
            <field type="SCAN" value="Passive" />
            <field type="OUT" value="@$(APP) Motor$(MotorNr)/controlInput/referenceSettings/+{:variableName}" />
            <field type="EGU" value="" />
            <field type="PINI" value="1" />
            <record pvName="$(Server)/$(Motor)/InRefSettings/position" source="steppermotorserver.Motor1/controlInput/referenceSettings/position"><field type="EGU" value="$(PosUnit)" /></record>
            <record pvName="$(Server)/$(Motor)/InRefSettings/axisTranslation" source="steppermotorserver.Motor1/controlInput/referenceSettings/axisTranslation" />
        </recordgroup>
        <recordgroup type="longout" autosave="true">
            <field type="SCAN" value="Passive" />
            <field type="OUT" value="@$(APP) Motor$(MotorNr)/+{:variableName}" />
            <field type="EGU" value="" />
            <field type="PINI" value="1" />
            <record pvName="$(Server)/$(Motor)/status" source="steppermotorserver.Motor1/status" />
        </recordgroup>
        <recordgroup type="longout" autosave="true">
            <field type="SCAN" value="Passive" />
            <field type="OUT" value="@$(APP) Motor$(MotorNr)/controlInput/positionSetpoint/+{:variableName}" />
            <field type="EGU" value="steps" />
            <field type="PINI" value="1" />
            <record pvName="$(Server)/$(Motor)/InPositionSP/positionStepsRelative" source="steppermotorserver.Motor1/controlInput/positionSetpoint/relativePositionInSteps" />
            <record pvName="$(Server)/$(Motor)/InPositionSP/positionSteps" source="steppermotorserver.Motor1/controlInput/positionSetpoint/positionInSteps" />
        </recordgroup>
        <recordgroup type="longout" autosave="true">
            <field type="SCAN" value="Passive" />
            <field type="OUT" value="@$(APP) Motor$(MotorNr)/controlInput/control/+{:variableName}" />
            <field type="EGU" value="" />
            <field type="PINI" value="0" />
            <record pvName="$(Server)/$(Motor)/InControl/start" source="steppermotorserver.Motor1/controlInput/control/start" />
            <record pvName="$(Server)/$(Motor)/InControl/emergencyStop" source="steppermotorserver.Motor1/controlInput/control/emergencyStop" />
            <record pvName="$(Server)/$(Motor)/InControl/disable" source="steppermotorserver.Motor1/controlInput/control/disable" />
            <record pvName="$(Server)/$(Motor)/InControl/stop" source="steppermotorserver.Motor1/controlInput/control/stop" />
            <record pvName="$(Server)/$(Motor)/InControl/enableAutostart" source="steppermotorserver.Motor1/controlInput/control/enableAutostart" />
            <record pvName="$(Server)/$(Motor)/InControl/enableFullStepping" source="steppermotorserver.Motor1/controlInput/control/enableFullStepping" />
            <record pvName="$(Server)/$(Motor)/InControl/resetError" source="steppermotorserver.Motor1/controlInput/control/resetError" />
            <record pvName="$(Server)/$(Motor)/InControl/enable" source="steppermotorserver.Motor1/controlInput/control/enable" />
            <record pvName="$(Server)/$(Motor)/InControl/calibrate" source="steppermotorserver.Motor1/controlInput/control/calibrate" />
            <record pvName="$(Server)/$(Motor)/InControl/determineTolerance" source="steppermotorserver.Motor1/controlInput/control/determineTolerance" />
        </recordgroup>
        <recordgroup type="longout" autosave="true">
            <field type="SCAN" value="Passive" />
            <field type="OUT" value="@$(APP) Motor$(MotorNr)/controlInput/swLimits/+{:variableName}" />
            <field type="EGU" value="steps" />
            <field type="PINI" value="1" />
            <record pvName="$(Server)/$(Motor)/InSwlimits/enable" source="steppermotorserver.Motor1/controlInput/swLimits/enable"><field type="EGU" value="" /></record>
            <record pvName="$(Server)/$(Motor)/InSwlimits/positionMaxSteps" source="steppermotorserver.Motor1/controlInput/swLimits/maxPositionInSteps" />
            <record pvName="$(Server)/$(Motor)/InSwlimits/positionMinSteps" source="steppermotorserver.Motor1/controlInput/swLimits/minPositionInSteps" />
        </recordgroup>
        <recordgroup type="longout" autosave="true">
            <field type="SCAN" value="Passive" />
            <field type="OUT" value="@$(APP) Motor$(MotorNr)/controlInput/referenceSettings/+{:variableName}" />
            <field type="EGU" value="steps" />
            <field type="PINI" value="1" />
            <record pvName="$(Server)/$(Motor)/InRefSettings/positionSteps" source="steppermotorserver.Motor1/controlInput/referenceSettings/positionInSteps" />
            <record pvName="$(Server)/$(Motor)/InRefSettings/positionEncoder" source="steppermotorserver.Motor1/controlInput/referenceSettings/encoderPosition"><field type="EGU" value="$(PosUnit)" /></record>
            <record pvName="$(Server)/$(Motor)/InRefSettings/axisTranslationSteps" source="steppermotorserver.Motor1/controlInput/referenceSettings/axisTranslationInSteps" />
        </recordgroup>
        <recordgroup type="longin" autosave="false">
            <field type="SCAN" value="1 second" />
            <field type="EGU" value="" />
            <record pvName="$(Server)/$(Motor)/Dummy" source="steppermotorserver.Motor1/Dummy">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/Dummy" />
            </record>
            <record pvName="$(Server)/$(Motor)/InDummysignals/dummyMotorTrigger" source="steppermotorserver.Motor1/controlInput/dummySignals/dummyMotorTrigger">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/controlInput/dummySignals/dummyMotorTrigger" />
            </record>
            <record pvName="$(Server)/$(Motor)/InDummysignals/dummyMotorStop" source="steppermotorserver.Motor1/controlInput/dummySignals/dummyMotorStop">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/controlInput/dummySignals/dummyMotorStop" />
            </record>
            <record pvName="$(Server)/$(Motor)/Modulestatus/status" source="steppermotorserver.Motor1/readback/ModuleStatus/status">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/ModuleStatus/status" />
            </record>
            <record pvName="$(Server)/$(Motor)/Position/actualValueInSteps" source="steppermotorserver.Motor1/readback/position/actualValueInSteps">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/position/actualValueInSteps" />
            </record>
            <record pvName="$(Server)/$(Motor)/Position/targetValueInSteps" source="steppermotorserver.Motor1/readback/position/targetValueInSteps">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/position/targetValueInSteps" />
            </record>
            <record pvName="$(Server)/$(Motor)/Status/isEnabled" source="steppermotorserver.Motor1/readback/status/isEnabled">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/status/isEnabled" />
            </record>
            <record pvName="$(Server)/$(Motor)/Status/errorId" source="steppermotorserver.Motor1/readback/status/errorId">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/status/errorId" />
            </record>
            <record pvName="$(Server)/$(Motor)/Status/isFullStepping" source="steppermotorserver.Motor1/readback/status/isFullStepping">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/status/isFullStepping" />
            </record>
            <record pvName="$(Server)/$(Motor)/Status/autostartEnabled" source="steppermotorserver.Motor1/readback/status/autostartEnabled">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/status/autostartEnabled" />
            </record>
            <record pvName="$(Server)/$(Motor)/Status/encoderReadoutMode" source="steppermotorserver.Motor1/readback/status/encoderReadoutMode">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/status/encoderReadoutMode" />
            </record>
            <record pvName="$(Server)/$(Motor)/Status/calibrationMode" source="steppermotorserver.Motor1/readback/status/calibrationMode">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/status/calibrationMode" />
            </record>
            <record pvName="$(Server)/$(Motor)/Status/isIdle" source="steppermotorserver.Motor1/readback/status/isIdle">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/status/isIdle" />
            </record>
            <record pvName="$(Server)/$(Motor)/Swlimits/isEnabled" source="steppermotorserver.Motor1/readback/swLimits/isEnabled">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/swLimits/isEnabled" />
            </record>
            <record pvName="$(Server)/$(Motor)/Swlimits/minPositionInSteps" source="steppermotorserver.Motor1/readback/swLimits/minPositionInSteps">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/swLimits/minPositionInSteps" />
            </record>
            <record pvName="$(Server)/$(Motor)/Swlimits/maxPositionInSteps" source="steppermotorserver.Motor1/readback/swLimits/maxPositionInSteps">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/swLimits/maxPositionInSteps" />
            </record>
            <record pvName="$(Server)/$(Motor)/EndswitchPositive/positionInSteps" source="steppermotorserver.Motor1/readback/positiveEndSwitch/positionInSteps">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/positiveEndSwitch/positionInSteps" />
            </record>
            <record pvName="$(Server)/$(Motor)/EndswitchPositive/isActive" source="steppermotorserver.Motor1/readback/positiveEndSwitch/isActive">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/positiveEndSwitch/isActive" />
            </record>
            <record pvName="$(Server)/$(Motor)/EndswitchNegative/positionInSteps" source="steppermotorserver.Motor1/readback/negativeEndSwitch/positionInSteps">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/negativeEndSwitch/positionInSteps" />
            </record>
            <record pvName="$(Server)/$(Motor)/EndswitchNegative/isActive" source="steppermotorserver.Motor1/readback/negativeEndSwitch/isActive">
                <field type="INP" value="@$(APP) Motor$(MotorNr)/readback/negativeEndSwitch/isActive" />
            </record>
        </recordgroup>
    </outputfile>
    <outputfile path="../templates/db/steppermotorserver.db" autosavePath="../templates/req/steppermotorserver.req" macroReserve="6">
        <field type="DTYP" value="ChimeraTK" />
        <recordgroup type="aai" autosave="false">
            <field type="SCAN" value="1 second" />
            <field type="INP" value="@$(APP) +{:address}" />
            <field type="EGU" value="" />
            <field type="FTVL" value="+{:value_type}" />
            <field type="NELM" value="${motor_cfg.number_motors}" />
            <record pvName="$(Server)/Motors/driverType" source="steppermotorserver.Motors/motorDriverType" />
            <record pvName="$(Server)/Motors/type" source="steppermotorserver.Motors/motorType" />
            <record pvName="$(Server)/Motors/driverDeviceName" source="steppermotorserver.Motors/motorDriverDeviceName" />
            <record pvName="$(Server)/Motors/driverCardName" source="steppermotorserver.Motors/motorDriverCardName" />
            <record pvName="$(Server)/Motors/driverModuleName" source="steppermotorserver.Motors/motorDriverModuleName" />
            <record pvName="$(Server)/Motors/driverId" source="steppermotorserver.Motors/motorDriverId">
                <field type="FTVL" value="LONG" /><!--Override necessary, because IOC recognizes it as LONG instead of ULONG-->
            </record>
            <record pvName="$(Server)/Motors/driverConfigFile" source="steppermotorserver.Motors/motorDriverConfigFile" />
            <record pvName="$(Server)/Motors/userUnitToStepsRatio" source="steppermotorserver.Motors/userUnitToStepsRatio" />
            <record pvName="$(Server)/Motors/encoderUnitToStepsRatio" source="steppermotorserver.Motors/encoderUnitToStepsRatio" />
            <record pvName="$(Server)/Motors/userPositionUnit" source="steppermotorserver.Motors/userPositionUnit" />
            <record pvName="$(Server)/Motors/dummy" source="steppermotorserver.Motors/dummy" />
        </recordgroup>
        <recordgroup type="longin" autosave="false">
            <field type="SCAN" value="1 second" />
            <field type="INP" value="@$(APP) +{:address}" />
            <field type="EGU" value="" />
            <record pvName="$(Server)/Trigger/period" source="steppermotorserver.Trigger/period" />
            <record pvName="$(Server)/Motors/nMotors" source="steppermotorserver.Motors/nMotors" />
        </recordgroup>
    </outputfile>
    <ignore>
        <!--
        This section contains source-based record entries, which should not be listed as "not processed".
        Additionally it is possible to mask multiple variables in the source files, using a regex.
        As the content of the ignore section is only processed after the outputfiles, records and masks in this section do not affect the db-files.
        <record/> entries only require a source attribute
        <mask/> entries requite the attributes "sourceLabel" and "regex". "regex" might be any regular expression, the re-module of python3 understands.
        -->
        <!--Ignoring internal variables-->
        <mask sourceLabel="steppermotorserver" regex=".*_040logicalNameMap_063map_061.*" />
        <!--We dont care for the trigger (yet?)-->
        <mask sourceLabel="steppermotorserver" regex="^Trigger/.*" />
    </ignore>
</EPICSdb>
